{"version":3,"sources":["components/Header/header.js","components/SearchBox/searchbox.js","components/NameContainer/namecontainer.js","components/ResultsContainer/resultscontainer.js","components/App/App.js","index.js"],"names":["Header","headTitle","headerExpanded","className","src","alt","SearchBox","onInputChange","onChange","event","target","value","placeholder","NameCard","suggestedName","rel","href","ResultContainer","suggestedNamesArr","suggestedNames","map","name","require","App","handleChange","inputText","setState","state","headerText","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAsBeA,EAhBA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAEzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,wGACLC,IAAI,gBACJF,UAAS,qBAAgBD,EACD,sBACA,wBAFf,OAGb,oBAAIC,UAAS,oBAAeD,EACA,qBACA,uBAFf,KAAb,SAEwDD,QCFrDK,G,MAZG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,OACI,qBAAKJ,UAAU,mBAAf,SACI,uBACIK,SAAY,SAACC,GAAD,OAAWF,EAAcE,EAAMC,OAAOC,QAClDR,UAAY,eACZS,YAAc,sBCQfC,G,MAZE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACf,OACI,mBAAIJ,OAAS,SAASK,IAAI,aACtBC,KAAI,UALK,mEAKL,OAAoBF,GAAiBX,UAAU,YADvD,SAEI,qBAAKA,UAAU,mBAAf,SACI,mBAAGA,UAAU,cAAb,SAA4BW,UCK7BG,G,MAXS,SAAC,GAAsB,IACrCC,EADoC,EAApBC,eACmBC,KAAI,SAACN,GAC1C,OAAO,cAAC,EAAD,CAA8BA,cAAiBA,GAAhCA,MAE1B,OACI,qBAAKX,UAAY,oBAAjB,SACMe,MCHRG,EAAOC,EAAQ,IA6DNC,E,kDA/CX,aAAe,IAAD,8BACV,gBAaJC,aAAe,SAACC,GAEZ,EAAKC,SAAS,CAEVxB,gBAAkBuB,EAClBN,eAAiBM,EAAYJ,EAAKI,GAAa,MAjBnD,EAAKE,MAAQ,CACTC,WAAa,WACb1B,gBAAiB,EACjBiB,eAAiB,IALX,E,0CAuBd,WACI,OACI,gCACI,cAAC,EAAD,CACIjB,eAAmB2B,KAAKF,MAAMzB,eAC9BD,UAAc4B,KAAKF,MAAMC,aAE7B,cAAC,EAAD,CAAWrB,cAAiBsB,KAAKL,eACjC,cAAC,EAAD,CAAiBL,eAAkBU,KAAKF,MAAMR,wB,GArC5CW,IAAMC,WCPxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0052f3ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\n// If class based component - this.props.nameoftheprop\r\n\r\n// prop for functional component\r\nconst Header = ({ headTitle, headerExpanded }) => {\r\n    // props.headTitle = 'abc'; // Cannot assign read only property \r\n    return (\r\n        <div className=\"head-container\">\r\n            <img src=\"https://user-images.githubusercontent.com/26179770/106359099-693e3380-6336-11eb-8069-9e36f25de5ca.png\"\r\n                alt=\"user-thinking\"\r\n                className={`head-image ${headerExpanded ? \r\n                                        'head-image-expanded' : \r\n                                        'head-image-contracted'} `} />\r\n            <h1 className={`head-text ${headerExpanded ? \r\n                                        'head-text-expanded' : \r\n                                        'head-text-contracted'} `}>{headTitle}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport './searchbox.css';\r\n\r\nconst SearchBox = ({ onInputChange }) => {\r\n    return (\r\n        <div className=\"search-container\">\r\n            <input \r\n                onChange = {(event) => onInputChange(event.target.value)}\r\n                className = \"search-input\" \r\n                placeholder = \"Type keywords\" \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\nimport './namecontainer.css';\r\n\r\nconst nameCheapUrl = \"https://www.namecheap.com/domains/registration/results/?domain=\";\r\n\r\nconst NameCard = ({suggestedName}) => {\r\n    return (\r\n        <a  target = \"_blank\" rel=\"noreferrer\"\r\n            href={`${nameCheapUrl}${suggestedName}`} className=\"card-link\">\r\n            <div className=\"result-name-card\">\r\n                <p className=\"result-name\">{suggestedName}</p>\r\n            </div>\r\n        </a>\r\n        \r\n    )\r\n}\r\n\r\nexport default NameCard","import React from 'react';\r\nimport NameCard from '../NameContainer/namecontainer';\r\nimport './resultscontainer.css';\r\n\r\nconst ResultContainer = ({suggestedNames}) => {\r\n    const suggestedNamesArr = suggestedNames.map((suggestedName) => {\r\n        return <NameCard key={suggestedName} suggestedName = {suggestedName} />\r\n    })\r\n    return (\r\n        <div className = \"results-container\">\r\n            { suggestedNamesArr }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultContainer","import React from 'react';\r\nimport './App.css'\r\n\r\nimport Header from '../Header/header'\r\nimport SearchBox from '../SearchBox/searchbox';\r\nimport ResultContainer from '../ResultsContainer/resultscontainer';\r\n\r\nconst name = require('@rstacruz/startup-name-generator');\r\n\r\n// functional Component\r\n// function App() {\r\n//     return <h1>This is my functional Component !</h1>\r\n// }\r\n\r\n// class Component\r\nclass App extends React.Component {\r\n\r\n    // name cannot be changed\r\n\r\n    // State - piece of data that we might need to save (and that might change later)\r\n    // for rendering in future or for performing some actions in future\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            headerText : 'Name It!',\r\n            headerExpanded : true,\r\n            suggestedNames : []\r\n        }\r\n    }\r\n\r\n    // OR\r\n    // state = {\r\n    //     headerText : 'Name It!'\r\n    // };\r\n\r\n    handleChange = (inputText) => {\r\n        // console.log(inputText)\r\n        this.setState({\r\n            // headerExpanded : inputText.length > 0  ? false : true\r\n            headerExpanded : !inputText,\r\n            suggestedNames : inputText ? name(inputText) : [],\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Header \r\n                    headerExpanded = { this.state.headerExpanded }\r\n                    headTitle = { this.state.headerText }\r\n                />\r\n                <SearchBox onInputChange = {this.handleChange}/>\r\n                <ResultContainer suggestedNames = {this.state.suggestedNames} />\r\n                {/* state example\r\n                <h2>{ this.state.headerText }</h2> \r\n\r\n                <button onClick = {() => {\r\n                    this.setState({\r\n                        headerText : 'Woww, header text changed!!'\r\n                    })\r\n                }}>\r\n                    Magic Happens Here!!\r\n                </button>                 */}\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\n\n// component to render, where to render - div (id of div element)\n// write code in jsx and we use create-react-app to transpile into normal js so that browser understands\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// State - piece of data that we might need to save (and that might change later)\n// for rendering in future or for performing some actions in future\n\n// object in js is a key value pair\n\n\n// Props -  a data that we can transfer from a parent component to child component\n"],"sourceRoot":""}